
#panel
  .ui.left.menu
    .header.item.medium.text
      | Reducer Type: 
    #ReducerContext.item onClick="setContext()"
      |Context
    #ReducerOutputCollector.item onClick="setOutputCollector()"
      |OutputCollector
    #ReducerExample.item onClick="setExample()"
      |Example

  .right.menu
    button.ui.basic.button#type-btn onClick="openType()"
      i.chevron.down.icon
      | Types  
    button.ui.teal.button#run-btn onClick="executeTask()"
      i.play.icon
      | Run

#type-menu.deactive
  span#T1
    |T1: 
    select.ui.dropdown#T1-select name="t1"
      option value="IntWritable"
        |IntWritable
      option value="LongWritable"
        |LongWritable
      option value="Text"
        |Text
  br
  span#T2
    |T2: 
    select.ui.dropdown#T2-select name="t2"
      option value="Integer"
        |Integer
      option value="IntWritable"
        |IntWritable
      option value="Long"
        |Long
      option value="LongWritable"
        |LongWritable
      option value="Double"
        |Double
      option value="DoubleWritable"
        |DoubleWritable
  br
  span#T3
    |T3: 
    select.ui.dropdown#T3-select name="t3"
      option value="IntWritable"
        |IntWritable
      option value="LongWritable"
        |LongWritable
      option value="Text"
        |Text
  br
  span#T4
    |T4: 
    select.ui.dropdown#T4-select name="t4"
      option value="Integer"
        |Integer
      option value="IntWritable"
        |IntWritable
      option value="Long"
        |Long
      option value="LongWritable"
        |LongWritable
      option value="Double"
        |Double
      option value="DoubleWritable"
        |DoubleWritable
  br

#editor
  .ui.positive.message
    p
      |Refresh if you can't see the editor
#result
  .result-menu.ui.fluid.secondary.menu style="align-items: center;"
    p.large.text
      |Result:
    .right.menu
      button.ui.grey.basic.button#hideBtn onClick="resultHide();"
        i.chevron.right.icon
  .ui.segment#result-content
    .ui.active.inverted.dimmer
      .ui.text.loader
        |Fetching Result


javascript:
  $(document).ready(function() {
    $('.ui.dropdown').dropdown();
  });


= javascript_include_tag "/ace-builds/src-noconflict/ace.js"
javascript:
  var editor = ace.edit("editor");
  editor.setTheme("ace/theme/tomorrow");
  editor.session.setMode("ace/mode/java");
  $("#ReducerExample").addClass("active");

  var mode = 1;
  var reducer_type = "Context";

  var Context_c = "//\n// Complete the reducer\n// Remember to change T1 and T2 to the corresponding types\n//\n\n";
  var OutputCollector_c = "//\n// Complete the reducer\n// Remember to change T1-T4 to the corresponding types\n//\n\n";
  var Context_t = "public void reduce(T1 key, Iterable<T2> values,\n\tContext context) throws IOException,InterruptedException {\n\n}";
  var OutputCollector_t = "public void reduce(T1 key, Iterator<T2> values,\n\tOutputCollector<T3,T4> oc1, Reporter reporter) throws IOException,InterruptedException {\n\n}";
  var Example_c = "//\n// An example of a communicable reducer\n// Use the templates to test yours\n//\n\n";
  var Example_t = "public void reduce(Text key, Iterable<IntWritable> values,\n\tContext context) throws IOException, InterruptedException {\n\tint sum = 0;\n\tfor (IntWritable val : values) {\n\t\tsum += val.get();\n\t}\n\tcontext.write(key, sum);\n\n}";


  function resultHide() {
      $("#result").removeClass("show");
  }

  function openType() {
    if ($("#type-menu").hasClass("deactive")) {
      $("#type-menu").removeClass("deactive");
      $("#type-menu").addClass("active");
      $("#type-btn").addClass("active");
    } else {
      $("#type-menu").removeClass("active");
      $("#type-menu").addClass("deactive");
      $("#type-btn").removeClass("active");
    }
  }

  function disableRun() {
    $("#run-btn").addClass("disabled");
    $("#hideBtn").addClass("hide");
  }

  function enableRun() {
    $("#run-btn").removeClass("disabled");
    $("#hideBtn").removeClass("hide");
  }

  function setContext() {
    $("#ReducerContext").addClass("active");
    $("#ReducerExample").removeClass("active");
    $("#ReducerOutputCollector").removeClass("active");
    if (mode != 1) {
      editor.setValue(Context_c + Context_t);
      mode = 1;
      reducer_type = "Context";
    }
    resultHide();
  }

  function setOutputCollector() {
    $("#ReducerContext").removeClass("active");
    $("#ReducerExample").removeClass("active");
    $("#ReducerOutputCollector").addClass("active");
    if (mode != 2) {
      editor.setValue(OutputCollector_c + OutputCollector_t);
      mode = 2;
      reducer_type = "Collector";
    }
    resultHide();
  }

  function setExample() {
    $("#ReducerContext").removeClass("active");
    $("#ReducerOutputCollector").removeClass("active");
    $("#ReducerExample").addClass("active");
    if (mode != 3) {
      editor.setValue(Example_c + Example_t);
      $("#T1-select").val("Text");
      $("#T2-select").val("IntWritable");
      $("#T3-select").val("Text");
      $("#T4-select").val("IntWritable");
      mode = 3;
      reducer_type = "Context";
    }
    resultHide();
  }

  function format(target) {
    return target.replace(/\n/g, "</br>").replace(/\t/g, "&#8195;").replace(" ", "&#032;");
  }

  function executeTask() {
    if ($("#run-btn").hasClass("disabled")) return;

    resultHide();
    disableRun();
    $("#result").addClass("show");
    $("#result-content").html("<div class='ui active inverted dimmer'><div class='ui text loader'>Fetching Result</div></div>");
    $.ajax({
    type: 'POST',
    url: "#{create_task_path}",
    data: { 
      java: editor.getValue(), 
      t1: $("#T1-select").val(),
      t2: $("#T2-select").val(),
      t3: $("#T3-select").val(),
      t4: $("#T4-select").val(),
      type: reducer_type,
      authenticity_token: "#{form_authenticity_token}"
    },
    dataType: 'json',
    success: function (data) {
        if (data.compile_error == 1) {
          $("#result-content").html("<table class='ui red table' id='compile-table'><thead><tr><th>Compile Error</th></tr></thead></table>");
          $("#compile-table").append("<tbody><tr><td>" + format(filterXSS(data.compile)) + "</td></tr></tbody></table>");
          return;
        }
        $("#result-content").html("<table class='ui teal table' id='execute-table'><thead><tr><th>Testing</th></tr></thead></table>");
        $("#execute-table").append("<tbody><tr><td>" + format(filterXSS(data.execute)) + "</td></tr></tbody>");

        $("#result-content").append("<table class='ui teal table' id='checker-table'><thead><tr><th>Checker</th></tr></thead></table>");
        $("#checker-table").append("<tbody><tr><td>" + format(filterXSS(data.checker)) + "</td></tr></tbody>");

        $("#result-content").append("<table class='ui teal table' id='jimple-table'><thead><tr><th>Extracted Jimple</th></tr></thead></table>");
        $("#jimple-table").append("<tbody><tr><td>" + format(filterXSS(data.jimple)) + "</td></tr></tbody>");
        enableRun();
      },
      error: function() {
        $('#result-content').html("Internal Error");
        enableRun();
      }
    });

  }
  setExample();


