
#width-message.ui.warning.message
  i.close.icon
  .header
    |Warning
  |To see the editor, screen width should be at least 630px

#editor-wrapper
  #panel
    .ui.left.menu
      .header.item.medium.text
        |Templates: 
      #ReducerOutputCollector.item onClick="setOutputCollector()"
        |OutputCollector
      #ReducerContext.item onClick="setContext()"
        |Context

    .right.menu
      button.ui.teal.basic.button#type-btn onClick="openType()"
        i.chevron.down.icon
        | Types  
      button.ui.teal.button#run-btn onClick="executeTask()"
        i.play.icon
        | Run

  #type-menu.deactive
    span#T1
      |T1: 
      select.ui.dropdown#T1-select name="t1"
        option value="IntWritable"
          |IntWritable
        option value="Integer"
          |Integer
        option value="LongWritable"
          |LongWritable
        option value="Long"
          |Long
        option value="BooleanWritable"
          |BooleanWritable
        option value="BytesWritable"
          |BytesWritable
        option value="Text"
          |Text
        option value="Double"
          |Double
        option value="DoubleWritable"
          |DoubleWritable
        option value="Float"
          |Float
        option value="FloatWritable"
          |FloatWritable
    br
    span#T2
      |T2: 
      select.ui.dropdown#T2-select name="t2"
        option value="Integer"
          |Integer
        option value="IntWritable"
          |IntWritable
        option value="Long"
          |Long
        option value="LongWritable"
          |LongWritable
        option value="Double"
          |Double
        option value="DoubleWritable"
          |DoubleWritable
        option value="Float"
          |Float
        option value="FloatWritable"
          |FloatWritable
    br
    span#T3
      |T3: 
      select.ui.dropdown#T3-select name="t3"
        option value="IntWritable"
          |IntWritable
        option value="Integer"
          |Integer
        option value="LongWritable"
          |LongWritable
        option value="Long"
          |Long
        option value="BooleanWritable"
          |BooleanWritable
        option value="BytesWritable"
          |BytesWritable
        option value="Text"
          |Text
        option value="Double"
          |Double
        option value="DoubleWritable"
          |DoubleWritable
        option value="Float"
          |Float
        option value="FloatWritable"
          |FloatWritable
    br
    span#T4
      |T4: 
      select.ui.dropdown#T4-select name="t4"
        option value="Integer"
          |Integer
        option value="IntWritable"
          |IntWritable
        option value="Long"
          |Long
        option value="LongWritable"
          |LongWritable
        option value="Double"
          |Double
        option value="DoubleWritable"
          |DoubleWritable
        option value="Text"
          |Text
        option value="Float"
          |Float
        option value="FloatWritable"
          |FloatWritable
    br
  #editor-loading
    .ui.active.inverted.dimmer
      .ui.text.loader
        |Fetching the Benchmark 
  #editor
    .ui.positive.message
      p
        |Refresh if you can't see the editor

  button.ui.basic.large.icon.button#benchmarkBtn.show onClick="benchmarkShow();"
    |Benchmark List
    i.angle.left.icon

  button.ui.basic.large.icon.button#showBtn onClick="resultShow();"
    |Result     
    i.angle.left.icon

  #benchmark
    .result-menu.ui.fluid.secondary.menu style="align-items: center;"
      p.large.text
        |Benchmarks:
      .right.menu
        button.ui.grey.basic.icon.button#hideBtn onClick="benchmarkHide();"
          i.chevron.right.icon
    #benchmark-content
      = render(partial: "partials/benchmark_list", locals: {title: "Literacture", benchmarks: @liter})
      = render(partial: "partials/benchmark_list", locals: {title: "Self Written", benchmarks: @selfs})
      = render(partial: "partials/benchmark_list", locals: {title: "Collected-2018", benchmarks: @b2018})
      /= render(partial: "partials/benchmark_list", locals: {title: "Collected-2017", benchmarks: @b2017})


  #result
    .result-menu.ui.fluid.secondary.menu style="align-items: center;"
      p.large.text
        |Result:
      .right.menu
        button.ui.grey.basic.icon.button#hideBtn onClick="resultHide();"
          i.chevron.right.icon
    #result-content
      .ui.active.inverted.dimmer
        .ui.text.loader
          |Fetching the Result


= render(partial: "partials/index")

javascript:
  function show_size_message() {
    var width = $(window).width();
    if (width < 630) {
      if ($("#width-message").hasClass("hidden")) {
        $("#width-message").removeClass("hidden");
      }
      $("#editor-wrapper").addClass("hidden");
    } else {
      if (!$("#width-message").hasClass("hidden")) {
        $("#width-message").addClass("hidden");
      }
      $("#editor-wrapper").removeClass("hidden");
    }
  }

  function set_wrapper_size() {
    $("#editor-wrapper").height($(window).height() - $("#mainMenu").height() - 160);
    $("#editor-wrapper").width($(window).width() - 10);
  }

  $(document).ready(function() {
    $('.ui.dropdown').dropdown();
    show_size_message();
    set_wrapper_size();
  });

  $(window).resize(function(){
    show_size_message();
    set_wrapper_size();
  });

  $(".message .close")
    .on('click', function() {
      $(this)
        .closest('.message')
        .transition('fade')
      ;
    })
  ;


= javascript_include_tag "/ace-builds/src-min-noconflict/ace.js"
javascript:
  var editor = ace.edit("editor");
  editor.setTheme("ace/theme/chrome");
  editor.session.setMode("ace/mode/java");
  var hasResult = false;

  var mode = 2;
  var reducer_type = "Collector";

  var Context_c = "//\n// Complete the template\n// Remember to set T1 and T2 in 'Types' before clicking 'Run'\n//\n\n";
  var OutputCollector_c = "//\n// Complete the template\n// Remember to set T1-T4 in 'Types' before clicking 'Run'\n//\n\n";
  var Context_t = "public void reduce(T1 key, Iterable<T2> values,\n\tContext context) throws IOException,InterruptedException {\n\n}";
  var OutputCollector_t = "public void reduce(T1 key, Iterator<T2> values,\n\tOutputCollector<T3,T4> oc1, Reporter reporter) throws IOException,InterruptedException {\n\n}";

  String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
  };


  function format(target) {
    return target.replace(/\n/g, "</br>").replace(/\t/g, "&#8195;").replace(" ", "&#032;");
  }

  function r_format(target) {
    return target.replaceAll("&amp;", "&").replaceAll("&lt;", "<").replaceAll("&gt;", ">").replaceAll("&quot;", "\"");
  }

  function benchmarkShow() {
      $("#benchmark").addClass("show");
      $("#benchmarkBtn").removeClass("show");
  }

  function benchmarkHide() {
    if ($("#benchmark").hasClass("show")) {
        $("#benchmark").removeClass("show");
        $("#benchmarkBtn").addClass("show");
    }
  }

  function resultHide() {
    $("#result").removeClass("show");
    if (hasResult) {
      $("#showBtn").addClass("show");
    }
  }

  function resultShow() {
    if (hasResult) {
        $("#result").addClass("show");
        $("#showBtn").removeClass("show");
      }
  }

  function openType() {
    if ($("#type-menu").hasClass("deactive")) {
      $("#type-menu").removeClass("deactive");
      $("#type-menu").addClass("active");
      $("#type-btn").addClass("active");
      $("#type-btn").removeClass("teal");
    } else {
      $("#type-menu").removeClass("active");
      $("#type-menu").addClass("deactive");
      $("#type-btn").removeClass("active");
      $("#type-btn").addClass("teal");
    }
  }

  function disableRun() {
    $("#run-btn").addClass("disabled");
    $("#hideBtn").addClass("hide");
    if (!$("#type-menu").hasClass("deactive")) {
      $("#type-menu").removeClass("active");
      $("#type-menu").addClass("deactive");
      $("#type-btn").removeClass("active");
      $("#type-btn").addClass("teal");
    }
  }

  function enableRun() {
    $("#run-btn").removeClass("disabled");
    $("#hideBtn").removeClass("hide");
  }

  function setContext() {
    $("#ReducerContext").addClass("active");
    $("#ReducerOutputCollector").removeClass("active");
    if (mode != 1) {
      editor.setValue(Context_c + Context_t);
      mode = 1;
      reducer_type = "Context";
    }
    resultHide();
  }

  function setOutputCollector() {
    $("#ReducerContext").removeClass("active");
    $("#ReducerOutputCollector").addClass("active");
    if (mode != 2) {
      editor.setValue(OutputCollector_c + OutputCollector_t);
      mode = 2;
      reducer_type = "Collector";
    }
    resultHide();
  }

  function setInitial() {
    $("#ReducerContext").removeClass("active");
    $("#ReducerOutputCollector").removeClass("active");
    if (mode != 3) {
      editor.setValue(r_format("#{@java}"));
      $("#T1-select").val("#{@benchmark.t1}");
      $("#T2-select").val("#{@benchmark.t2}");
      $("#T3-select").val("#{@benchmark.t3}");
      $("#T4-select").val("#{@benchmark.t4}");
      if ("#{@benchmark.r_type}" == "Context") {
        reducer_type = "Context";
      } else {
        reducer_type = "Collector";
      }
      mode = 3;
    }
    resultHide();
  }

  function benchmarkLoad(bid) {
    benchmarkHide();
    $("#editor-loading").addClass("show");
    $.ajax({
    type: 'POST',
    url: "#{load_benchmark_path}",
    data: { 
      id: bid, 
      authenticity_token: "#{form_authenticity_token}"
    },
    dataType: 'json',
    success: function (data) {
        editor.setValue(r_format(data.java));
        $("#editor-loading").removeClass("show");
        hasResult = false;
        $("#showBtn").removeClass("show");
        $("#T1-select").val(data.t1);
        $("#T2-select").val(data.t2);
        $("#T3-select").val(data.t3);
        $("#T4-select").val(data.t4);
        if (data.r_type == "Context") {
          reducer_type = "Context";
        } else {
          reducer_type = "Collector";
        }
        mode = 3;
      },
      error: function() {
        editor.setValue("// Failed loading\n");
        $("#editor-loading").removeClass("show");
        hasResult = false;
        $("#showBtn").removeClass("show");
      }
    });
  }

  function executeTask() {
    if ($("#run-btn").hasClass("disabled")) return;

    resultHide();
    disableRun();
    $("#result").addClass("show");
    benchmarkHide();
    hasResult = true;
    $("#result-content").html("<div class='ui active inverted dimmer'><div class='ui text loader'>Fetching the Result</div></div>");
    if ($("#T3-select").val() == null || $("#T3-select").val() == "") $("#T3-select").val($("#T1-select").val());
    if ($("#T4-select").val() == null || $("#T4-select").val() == "") $("#T4-select").val($("#T2-select").val());
    $.ajax({
    type: 'POST',
    url: "#{create_task_path}",
    data: { 
      java: editor.getValue(), 
      t1: $("#T1-select").val(),
      t2: $("#T2-select").val(),
      t3: $("#T3-select").val(),
      t4: $("#T4-select").val(),
      r_type: reducer_type,
      authenticity_token: "#{form_authenticity_token}"
    },
    dataType: 'json',
    success: function (data) {
        enableRun();
        if (data.result.includes("Compile Error")) {
          $("#result-content").html("<table class='ui red table' id='compile-table'><thead><tr><th>Compile Error</th></tr></thead></table>");
          $("#compile-table").append("<tbody><tr><td>Also check if the types are set correctly</td></tr></tbody></table>");
          $("#compile-table").append("<tbody><tr><td>" + format(filterXSS(data.result)) + "</td></tr></tbody></table>");
          $("#type-btn").removeClass("teal");
          $("#type-btn").addClass("red");
          setTimeout(function() {
            $("#type-btn").removeClass("red");
            $("#type-btn").addClass("teal");
            },700);
          return;
        } else if (data.result.includes("Type Error")) {
          $("#result-content").html("<table class='ui red table' id='compile-table'><thead><tr><th>Type Error</th></tr></thead></table>");
          $("#compile-table").append("<tbody><tr><td>Check if the types are set correctly</td></tr></tbody></table>");
          $("#compile-table").append("<tbody><tr><td>" + format(filterXSS(data.result)) + "</td></tr></tbody></table>");
          $("#type-btn").removeClass("teal");
          $("#type-btn").addClass("red");
          setTimeout(function() {
            $("#type-btn").removeClass("red");
            $("#type-btn").addClass("teal");
            },700);
          return;
        }
        $("#result-content").html("<table class='ui teal table' id='execute-table'><thead><tr><th>Result</th></tr></thead></table>");
        $("#execute-table").append("<tbody><tr><td>" + format(filterXSS(data.result)) + "</td></tr></tbody>");

        enableRun();
      },
      error: function() {
        $('#result-content').html("Network Error");
        enableRun();
      }
    });

  }
  setInitial();


